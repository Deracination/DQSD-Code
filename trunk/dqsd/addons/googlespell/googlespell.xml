<search function="googlespell">
  <name>Google Spellcheck</name>
  <description>Invoke Google webservice for spelling suggestion.  Requires license key.  You can obtain one for free at http://www.google.com/apis/, with a restriction on the number of calls per day.</description>
  <link>http://www.google.com/apis/</link>
  <category>Search the Web</category>
  <contributor>Glenn Carr</contributor>
  <dqsd_version>
      <majorhi>3</majorhi>
      <majorlo>0</majorlo>
      <minorhi>0</minorhi>
      <minorlo>25</minorlo>
  </dqsd_version>
  <form name="googlespellf">
    <div id="googlespell_googleWebService" name="googlespell_googleWebService" style="behavior:url(addons\\googlespell\\webservice.htc)" onresult="googlespell_onWebServiceResult()" />
  </form>
  <script><![CDATA[
    function googlespell(q)
    {
      if( nullArgs("googlespell", q) )
        return false;

      if ( typeof googleLicenseKey == 'undefined' )
      {
        displayPopupMessage( 'This requires a Google APIs license key.  You can obtain one for free at <A target="_blank" HREF="http://www.google.com/apis/">http://www.google.com/apis/</A>.<br/>' +
                             'Once you obtain a key, assign it to \'googleLicenseKey\' in your localprefs.js.');
        return;
      }
      googlespell_callWebService(q)
    }

    function googlespell_initWebService()
    {
      try 
      {
        document.all.googlespell_googleWebService.useService("http://api.google.com/GoogleSearch.wsdl", "GoogleSearchService");
        return true;
      } 
      catch (ex) 
      {
        displayPopupMessage("Web service failed to initialize. " + ex.description);
        return false;
      }
    }

    function googlespell_callWebService(sSearch)
    {
      if (googlespell_initWebService()) {

        var objCall = new Object();
        objCall.funcName = "doSpellingSuggestion";
        objCall.async = true;

        try 
        {
          iCallID = document.all.googlespell_googleWebService.GoogleSearchService.callService(objCall, googleLicenseKey, sSearch, 0, 10, true, "", false, "lang_en", "latin1", "latin1");
        } 
        catch (ex) 
        {
          displayPopupMessage("Failed: " + ex.description);
        }
      }

      return false;
    }

    function googlespell_onWebServiceResult()
    {
      if(event.result.error) 
      {
        displayPopupMessage("Error executing web service. " + event.result.errorDetail.code + ", " + event.result.errorDetail.string + " " + event.result.errorDetail.raw);
      } 
      else 
      {
        var oDoc = event.result.raw;
        resultXml = oDoc.xml;
        var sSuggestedSpelling = oDoc.selectSingleNode("SOAP-ENV:Body/ns1:doSpellingSuggestionResponse/return").text;
        if ( sSuggestedSpelling != '' )
        {
          displayPopupMessage( "<b>Google suggests:</b>&nbsp; "+ sSuggestedSpelling );

          return true;
        }
        else
        {
          displayPopupMessage( "Correct or Unrecognizable" );
          
          return false;
        }

        // document.deff.q.createTextRange().select();

      }
    }
  ]]></script>
</search>
