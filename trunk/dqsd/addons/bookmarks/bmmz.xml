<search function="bmmz">
  <name>Mozilla Bookmarks</name>
  <description>
    Goto Mozilla Bookmarks<br/>
    <div class="helpboxDescLabels">Switches:</div>
    <table class="helpboxDescTable">
	<tr><td>/reload</td><td> - </td><td>Force reload and update cache</td></tr>
	<tr><td>/help</td><td> - </td><td>Show the help menu</td></tr>
    </table>
    <div class="helpboxDescLabels">Examples:</div>
    <table class="helpboxDescTable">
	<tr><td>bmmz</td><td> - </td><td>Show Mozilla bookmarks menu - cached if not the first time</td></tr>
	<tr><td>bmmz /r</td><td> - </td><td>Reload cache and show Mozilla bookmarks menu</td></tr>
    </table>
  </description>
  <link></link>
  <category nomenu="true">Bookmarks</category>
  <contributor>Brent Beardsley</contributor>

  <script src="addons/bookmarks/bookmarks_lib.js"></script>
  <script><![CDATA[
    var mozilla_bookmarks_array = null;

    function bmmz_get_bookmarks_array()
    {
	if (mozilla_bookmarks_array == null) {
		var bookmarks_full_path = "";
		var user_specified_dir = (typeof bookmarks_mozilla_location != "undefined" && bookmarks_mozilla_location != "");
		var user_profile = (typeof bookmarks_mozilla_profile != "undefined" && bookmarks_mozilla_profile != "") ? bookmarks_mozilla_profile : "default";
		var user_file = (typeof bookmarks_mozilla_file != "undefined" && bookmarks_mozilla_file != "") ? bookmarks_mozilla_file : "bookmarks.html";
		if (!user_specified_dir) {
			ensureLauncher();
			var bmk_folder = DQSDLauncher.GetSpecialFolderLocation("AppData") + "\\Mozilla\\Profiles\\"+user_profile+"\\";
			// appears that there is a random directory below the profile directory so get it and if it's there add it to the path
			var folders = getFolders(bmk_folder).split('\n');
			for (var i=0; i < folders.length; i++) {
				if (folders[i] == ".")
					continue;
				bmk_folder += (folders[i]+"\\");
				break;
			}
			bookmarks_full_path = bmk_folder + user_file;
		} else {
		  bookmarks_full_path = bookmarks_mozilla_location + "\\" + user_file;
		}
		mozilla_bookmarks_array = bookmarks_get_bookmarks_array_from_netscape(bookmarks_full_path);
	}
	return mozilla_bookmarks_array;
    }

    function bmmz(q)
    {
        var args = parseArgs(q, "reload, help");
	if (args != null && args.switches.length >= 1) {
	  if (args.switches[0].name == "reload") {
		mozilla_bookmarks_array = null;
	  } else if (args.switches[0].name == "help") {
		nullArgs("bmmz", "?");
		return;
	  }
	}
	if (args.q == "?") {
		nullArgs("bmmz", "?");
		return;
	}

	bookmarks_show_menu(bmmz_get_bookmarks_array());
    }

    function bmmzMenuHook(mb)
    {
	if (typeof bookmarks_type == "undefined" || bookmarks_type != "bmmz")
		return;

	var hBookmarksMenu = bookmarksGetMenu(mb);
	if (hBookmarksMenu > 0) {
	  bookmarks_get_menu(bmmz_get_bookmarks_array(), mb, hBookmarksMenu);
	}

    }

    registerMenuHook(bmmzMenuHook);

    ]]>
  </script>
</search>
