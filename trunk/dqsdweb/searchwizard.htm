<html>
<head>
<title>Dave's Quick Search Deskbar Search Wizard</title>
<link rel="stylesheet" type="text/css" href="dqsd.css">
<style>
li { padding-bottom: 1em }
img { margin: 5px }
.code { font-size: 80%; color: maroon; background: #eeeeee; border: black 1px solid; padding: 3px 3px }
</style>
<script language="Javascript1.2" src="utilities.js"></script>
</head>
<body>
<center>
<h2><nobr>Dave's Quick Search Deskbar <wbr><span style="color: navy">Search Wizard</span></nobr></h2>
<div class="lastupdate">
	<nobr>Last updated:
		<script>document.write( getDisplayDate( document.lastModified ) );</script>
	</nobr>
</div>
<br/>
[ <a href="doc.htm">Dave's Quick Search Deskbar</a> ]
</center>

<hr size="1">

<div align="center">
<b><a href="http://prdownloads.sourceforge.net/dqsd/dqsdwiz1.0.0.exe?download">Download version 1.0</a></b><br/>released 23-Oct-2002<br/>
<span class="footnote">(This version is a rollup of the 10+ beta releases.)</span></div>

<p>
One of biggest pains when writing a new DQSD search is massaging the correct HTML FORM into well-formed XML.&nbsp;&nbsp;I finally got annoyed enough to
write a little utility to do some of the work for me.&nbsp;&nbsp;I call it <b><a href="http://sourceforge.net/project/showfiles.php?group_id=42081&release_id=108860">Dave's Quick Search Deskbar Search Wizard</a></b>.
<center>
<img src="hatwand.jpg">
</center>
</p>

<hr size="1">

<h3>What does it do and why would I want to use it?</h3>

<p>
In a nutshell, it generates a DQSD search from the page currently displayed in your browser.
</p>

<p>
If you have no desire to ever write a search for DQSD, then don't read any further.&nbsp;&nbsp;If you do write searches from time to time, or at least want to, then you may find the wizard useful.
</p>

<p>
The first thing I typically do when creating a new search is to view the source for the page and strip out everything but the FORM for the search.&nbsp;&nbsp;This is tedious.&nbsp;&nbsp;And, often it's hard to find the right FORM when there are multiple FORMs in the page.&nbsp;&nbsp;Also, the process of converting the FORM's HTML to well-formed XML is error-prone (I always forget to close the INPUT elements with "/>").&nbsp;&nbsp;There had to be an easier way.
</p>

<h3>OK, so how do I use it?</h3>

<p>
<ol>
<li><a href="http://sourceforge.net/project/showfiles.php?group_id=42081&release_id=109729">Install</a> the Search Wizard.</li>&nbsp;&nbsp;You should see a new button on your toolbar:<br/>
<center>
<img src="wizard_toolbar.jpg">
</center>
If you don't, simply right-click on the IE toolbar, and click 'Customize...'.&nbsp;&nbsp;Add the button labeled "DQSD Search Wizard" in the list of available toolbar buttons.
<li>Go to the web page containing the search you want to add to DQSD.</li>
<li>Click in the field that contains the search string.</li>
<li>Start up the wizard by clicking on its Internet Explorer toolbar button.</li>
<li>
You should see a dialog that looks something like the following.&nbsp;&nbsp;Some of the fields will be automatically filled in.&nbsp;&nbsp;Enter an abbreviation and a title for the new search.&nbsp;&nbsp;The abbreviation is the string that will invoke the search and will be used for the file name, so keep it short and simple.<br/><br/>
<center>

<!-- <div style="font-size: xx-small">(Hold your cursor over the fields to seea description.)</div> -->
<img border="0" src="dqsdsearchwiz.jpg" align="top">

</center>
</li>
<li>
In the list of FORM elements, make sure at least one FORM is checked.&nbsp;&nbsp;If you clicked in a field before invoking the wizard, the FORM containing that field should be already be checked.&nbsp;&nbsp;Selecting a FORM in the list and expanding the dialog by clicking the HTML button will show the HTML content of the FORM.&nbsp;&nbsp;Selecting a FORM will also change the background and outline of the FORM on the web page in most cases.&nbsp;&nbsp;This is really just to provide some help in determining which FORM(s) you need include.&nbsp;&nbsp;You can check multiple FORMs, all of which will be included in the search file.
</li>
<li>Hit OK and you'll be prompted to save the search file to your DQSD 'searches' directory.</li>
<li>After saving the file, it will come up in Notepad by default.&nbsp;&nbsp;(Click 'Options...' to change the editor to something other than Notepad.)
</ol>
</p>

<h3>Example</h3>

<p>
In the screenshot above, I went to <a href="http://www.loc.gov">http://www.loc.gov</a> (the US Library of Congress) and clicked in the search field...<br/>
<center><img src="loc.jpg"></center>
Then I clicked the 'DQSD Search Wizard' button.&nbsp;&nbsp;All FORM elements in the page are listed (in this case only one), with the one checked that contains the 'active' element.&nbsp;&nbsp;I entered an abbreviation and a title (the title appears in the menu and help).&nbsp;&nbsp;Finally, I pressed 'OK' and I was prompted to save 'loc.xml' to the 'searches' subdirectory of my DQSD installation.
</p>

<p>
The resulting XML file search file will look something like <a href="#searchxml">the following</a>.&nbsp;&nbsp;And, in spite of the comment at the top of the file, this search just works.&nbsp;&nbsp;<i>Woo hoo!</i>&nbsp;&nbsp;(Well, I find it fairly exciting.)&nbsp;&nbsp;Granted, complicated searches won't 'just work', but the wizard will at least do a bunch of the tedious work for you.
</p>

<a name="searchxml" />
<div class="code">
<xmp>
<search function="loc">
  <COMMENT>

    Even though this XML search will probably load and is a good start
    toward a completed search, please be aware that this search will probably
    not work as is and will probably require some changes.

  </COMMENT>
  <name>Library of Congress</name>
  <category>Reference</category>
  <contributor>Glenn Carr</contributor>
  <link>http://www.loc.gov/</link>
  <email>glenn at glenncarr dot com</email>
  <description>
  Search the Library of Congress
    <div class="helpboxDescLabels">Examples:</div>
    <table class="helpboxDescTable">
      <tr><td></td></tr>
      <tr><td></td></tr>
    </table>
  </description>
  <form name="locf"
        method="get"
        action="http://search.loc.gov:8765/query.html">

    <COMMENT> The following field was active (i.e. had focus) when the search was generated. </COMMENT>

    <input type="hidden" name="qt" value="" />
  </form>
  <script><![CDATA[
    function loc(q)
    {
      if( nullArgs("loc", q) )
        return;

      // FORM variables for locf

      // The wizard assigned the search string to this form field value because
      // this field was the active element when the search file was generated.
      // Change this to args.q if the search string is parsed with parseArgs.
      document.locf.qt.value = q;

      submitForm(locf);
    }
  ]]></script>
  <copyright>
    The following applies if this file is included and distributed with Dave's Quick Search Deskbar:
    Copyright (c) 2002 David Bau; Distributed under the terms of the GNU Public License, Version 2 (http://www.gnu.org/copyleft/gpl.txt)
  </copyright>
  <created_by>
    This search file was initially created on 10/21/02 at 23:26:55
    by Dave's Quick Search Deskbar Search Wizard version 0.9.1 (beta),
    Copyright (c) 2002 Glenn Carr; Distributed under the terms of the GNU General Public License, Version 2
  </created_by>
</search>
</xmp>
</div>

<h3>Switches</h3>

<p>
The 'parseArgs' utility method has become the convention for parsing switches for searches.&nbsp;&nbsp;If you enter some switches in the 'Switches:' field of the search wizard...<br/>
<center><img src="switches.jpg"></center><br/>
...the generated search will now include basic code for parsing the switches:
</p>

<div class="code">
<xmp>
      // Parse switches with parseArgs:

      // parseArgs usage:
      // Arguments:
      //    q                - string from the search function
      //    expectedSwitches - list or array of the expected switch values
      //    expandSwitches   - optional parameter [default = true] used to determine
      //                       if the switch shortcuts should be expanded (i.e. /f becomes /foo)
      // Returns an object with these properties:
      //    q        - the input string with the switches removed
      //    switches - array of objects with these two properties:
      //                  name:   expanded name of the matched switch (i.e. foo as in /foo:bar)
      //                  value:  value of switch (i.e. bar as in /foo:bar)
      //    switch_val - associative array with the switch name as the key with the switch value
      //                 as the value. (i.e. switch_val["foo"] = "bar" as in /foo:bar)

      //var args = parseArgs(q, "news, sports, business");
      //if ( args.switches.length > 0 )
      //{
      //  switch( args.switches[0].name )
      //  {
      //    case "news":
      //         break;
      //    case "sports":
      //         break;
      //    case "business":
      //         break;
      //    default:
      //         break;
      //  } //end-switch
      //}
</xmp>
</div>

<p>
Anyway, that's the gist of it.&nbsp;&nbsp;It still needs a lot of testing, and there is plenty of room for improvement.&nbsp;&nbsp;It's also <a href="http://cvs.sourceforge.net/cgi-bin/viewcvs.cgi/dqsd/dqsd/src/DQSDSearchWiz/">open source</a> like DQSD, so feel free to hack away and send in bug fixes.
<p>

<script>
document.write( buildEmail( 'glenn', 'glenncarr', 'com', 'Glenn Carr' ) );
</script>
<br/>
October 23, 2002

<h3>Credits</h3>
<ul>
<li>
<a href="http://notesbydave.com">David Bau</a> for such a cool tool.&nbsp;&nbsp;Aren't the best things in life usually the simplest?
</li>
<li>
<a href="http://www.cheztabor.com/projects.htm">Tim Tabor</a> for sharing his code.&nbsp;&nbsp;Probably couldn't (and for sure wouldn't) have done it without those examples.
</li>
</ul>


</body>
</html>
